/*global $*/
/*global lastsx */
/*global lastsy */
/*global drawSVGLines */
var lastsx = 0,
    lastsy = 0,
    lastox = 0,
    lastoy = 0,
    currentColor = "red",
    currentWidth = 1;

function resetSize(svg, width, height) {
  'use strict';
  svg.configure({width: width || $(svg._container).width(),
    height: height || $(svg._container).height()});
}

function clearLines() {
  'use strict';
  $('#svgbasics').svg('get').clear();
}

function drawInitial(svg) {
  'use strict';
  svg.circle(75, 75, 50, {fill: 'none', stroke: 'red', 'stroke-width': 3});
  var g = svg.group({stroke: 'black', 'stroke-width': 2});
  svg.line(g, 15, 75, 135, 75);
  svg.line(g, 75, 15, 75, 135);
}

var colours = ['purple', 'red', 'orange', 'yellow', 'lime', 'green', 'blue', 'navy', 'black'];

function transformHoriz( x, g ) {
  'use strict';
  if (Math.abs(x) < 430000) {
    return x;  // no transformation
  }
  var rawsx = ((Math.abs(x)-Math.abs(g.gxr))/g.dx*gvWindowWidth);
  return gvWindowWidth-rawsx;
}

function transformVert( y, g ) {
  'use strict';
  if (Math.abs(y) < 910000) {
    return y;  // no transformation
  }
  var rawsy = (Math.abs(y)-Math.abs(g.gyt))/g.dy*svgElemHeight();
  return rawsy;
}

function extractHoriz( coo ) {
  'use strict';
  var cooHoriz = Math.min(Math.abs(coo[0]),Math.abs(coo[1]));
  if (cooHoriz > 500000000) {
    return cooHoriz/1000;
  }
  return cooHoriz;
}

function extractVert( coo ) {
  'use strict';
  var cooVert = Math.max(Math.abs(coo[0]),Math.abs(coo[1])); 
  if (cooVert > 910000000) {
    return cooVert/1000;
  }
  return cooVert;
}

function isEven( n ) { 
  'use strict';
  return ((n%2) === 0); 
}

/*function gatherWorldCoordinatesFromScript( script ) {
  'use strict';
  var worldCoordinates = [];
  return worldCoordinates;
}*/

function isNumber( ch ) {
  'use strict';
  return ch.search(/\d/) >= 0;
}

function processPointLine(currentLine, coordinates) {
  'use strict';
  var coords = currentLine.split(/[ ,\)]+/),
      c1 = [ parseFloat(coords[0]), parseFloat(coords[1]) ],
      x1 = transformHoriz(extractHoriz(c1)),
      y1 = transformVert(extractVert(c1));
  coordinates.push({x1: x1, y1: y1, 
                    color: currentColor, strokeWidth: currentWidth, 
                    type: 'point'});
  lastsx = x1;
  lastsy = y1;
}

function processRectangleLine(currentLine, coordinates) {
  'use strict';
  var coords = currentLine.split(/[ ,\)]+/),
      c1 = [ parseFloat(coords[0]), parseFloat(coords[1]) ],
      c2 = [ parseFloat(coords[2]), parseFloat(coords[3]) ],
      sx1 = transformHoriz(extractHoriz(c1)),
      sy1 = transformVert(extractVert(c1)),
      sx2 = transformHoriz(extractHoriz(c2)),
      sy2 = transformVert(extractVert(c2)),
      x1 = Math.min(sx1,sx2),
      y1 = Math.min(sy1,sy2),
      x2 = Math.max(sx1,sx2),
      y2 = Math.max(sy1,sy2),
      swidth=x2-x1,
      sheight=y2-y1;
  coordinates.push({x1: x1, y1: y1, width: swidth, height: sheight, 
                    color: currentColor, strokeWidth: currentWidth, 
                    type: 'rect'});
  lastsx = sx2;
  lastsy = sy2;
}

function processCoordinatesLine(currentLine, coordinates, g) {
  'use strict';
  var coords = currentLine.split(/[ ,\)<]+/),
      c1, c2, ox1, oy1, ox2, oy2, sx1, sy1, sx2, sy2, coord;
  if (coords.length > 3) {
    c1 = [ parseFloat(coords[0]), parseFloat(coords[1]) ];
    c2 = [ parseFloat(coords[2]), parseFloat(coords[3]) ];
    ox1 = extractHoriz(c1);
    oy1 = extractVert(c1);
    ox2 = extractHoriz(c2);
    oy2 = extractVert(c2);
    sx1 = transformHoriz(ox1,g);
    sy1 = transformVert(oy1,g);
    sx2 = transformHoriz(ox2,g);
    sy2 = transformVert(oy2,g);
    coordinates.push({x1: sx1, y1: sy1, x2: sx2, y2: sy2, 
                      ox1: ox1, oy1: oy1, ox2: ox2, oy2: oy2, 
                      color: currentColor, strokeWidth: currentWidth, 
                      type: 'line'});
    lastox = ox2;
    lastoy = oy2;
    lastsx = sx2;
    lastsy = sy2;
  } else if (coords.length === 2) {
    c2 = [ parseFloat(coords[0]), parseFloat(coords[1]) ];
    ox2 = extractHoriz(c2);
    oy2 = extractVert(c2);
    sx2 = transformHoriz(ox2,g);
    sy2 = transformVert(oy2,g);
    try {
      coordinates.push({x1: lastsx, y1: lastsy, x2: sx2, y2: sy2, 
                       ox1: ox1, oy1: oy1, ox2: ox2, oy2: oy2, 
                       color: currentColor, strokeWidth: currentWidth, 
                       type: 'line'});
    } catch(ignore) {} // Pokémon
    lastox = ox2;
    lastoy = oy2;
    lastsx = sx2;
    lastsy = sy2;
  }
  if (coords.length > 4) {
    for (coord in coords) {
      if (coord>3 && isEven(coord) && (coords[coord] !== "")) {
        c2 = [ parseFloat(coords[coord]), parseFloat(coords[parseInt(coord,10)+1]) ];
        ox2 = extractHoriz(c2);
        oy2 = extractVert(c2);
        sx2 = transformHoriz(ox2,g);
        sy2 = transformVert(oy2,g);
        coordinates.push({x1: lastsx, y1: lastsy, x2: sx2, y2: sy2, 
                          ox1: lastox, oy1: lastoy, ox2: ox2, oy2: oy2, 
                          color: currentColor, strokeWidth: currentWidth, 
                          type: 'line'});
        lastox = ox2;
        lastoy = oy2;
        lastsx = sx2;
        lastsy = sy2;
      }
    }
  }
}

function processCommandLine(currentLine, coordinates, g) {
  'use strict';
  var lineParts = currentLine.split(" "),
      command = lineParts[0],
      args = [],
      part, textValue, textX, textY;
  for (part in lineParts) {
    if (part>0) {
      args.push(lineParts[part]);
    }
  }
  if (command === "color") {
    currentColor = args[0];
  }
  if (command === "width") {
    currentWidth = args[0];
  }
  if (command === "text") {
    textValue = args[0];
    textX = transformHoriz(extractHoriz([args[1],args[2]]),g);
    textY = transformVert(extractVert([args[1],args[2]]),g);
    coordinates.push({x1: textX, y1: textY, 
                      text: textValue, color: currentColor, strokeWidth: currentWidth,
                      type: 'text'});
  }
}

var SDO_POINT_PATT="MDSYS.SDO_GEOMETRY(2001,NULL,NULL,MDSYS.SDO_ELEM_INFO_ARRAY(1,1,1),MDSYS.SDO_ORDINATE_ARRAY(";
var SDO_LINE_PATT ="MDSYS.SDO_GEOMETRY(2002,NULL,NULL,MDSYS.SDO_ELEM_INFO_ARRAY(1,2,1),MDSYS.SDO_ORDINATE_ARRAY(";
var SDO_RECT_PATT ="MDSYS.SDO_GEOMETRY(2003,NULL,NULL,MDSYS.SDO_ELEM_INFO_ARRAY(1,1003,3),MDSYS.SDO_ORDINATE_ARRAY(";

function processScriptLine(currentLine, coordinates, gvp) {
  'use strict';
  var line = "",
      geomType="",
      firstChar;
  if (currentLine !== "") {
    geomType = "line";  // default
    if (currentLine.substr(0,92) === SDO_POINT_PATT) {
      line = currentLine.substr(92);
      geomType = "point";
    } else if (currentLine.substr(0,92) === SDO_LINE_PATT) {
      line = currentLine.substr(92);
    } else if (/posList/.test(currentLine)) {
      line = currentLine.match(/posList>.*</)[0].substr(8,currentLine.length);
    } else if (currentLine.substr(0,95) === SDO_RECT_PATT) {
      line = currentLine.substr(95);
      geomType = "rect";
    } else if (currentLine.substr(0,4) === "rect") {
      line = currentLine.substr(5);
      geomType = "rect";
    } else {
      line = currentLine;
    }
    firstChar = line.charAt(0);
    if (isNumber(firstChar)) {
      if (geomType === "line") {
        processCoordinatesLine(line, coordinates, gvp);
      } else if (geomType === "point") {
        processPointLine(line, coordinates, gvp);
      } else {
        processRectangleLine(line, coordinates, gvp);
      }
    } else {
      processCommandLine(line, coordinates, gvp);
    }
  }
}

function processScriptAsXML( xmlstr, geoViewPort ) {
  'use strict';
  var coordinates = [],
      parser, xmlDoc, 
      geometrie, ordinatesNode, ordinates,
      gi, glen,
      oi, olen,
      line, gType;
  if (window.DOMParser) {
    parser=new DOMParser();
    xmlDoc=parser.parseFromString(xmlstr,"text/xml");
  } else { // Internet Explorer
    xmlDoc=new ActiveXObject("Microsoft.XMLDOM");
    xmlDoc.async=false;
    xmlDoc.loadXML(xmlstr); 
  }
  geometrie=xmlDoc.getElementsByTagName('Geometrie');
  //console.log("geometrie: '"+geometrie.length+"'");
  for (gi = 0, glen = geometrie.length; gi<glen; gi++) {
    gType = geometrie[gi].getElementsByTagName('SDO_GTYPE')[0].textContent;
    ordinatesNode=geometrie[gi].getElementsByTagName('SDO_ORDINATES');
    ordinates=ordinatesNode[0].getElementsByTagName('NUMBER');
    if (gType === "2001") { // point
      console.log('point');
    } else if (gType === "2003") {
      line = "";
      for (oi = 0, olen = ordinates.length; oi<olen; oi++) {
        line += ordinates[oi].textContent + " ";
      }
      processCoordinatesLine(line, coordinates, geoViewPort);
    }
  }
  return coordinates;
}

function processScriptToCoordinates() {
  'use strict';
  var myScript = $('#myScript')[0].value,
      scriptLines = myScript.split("\n"),
      coordinates = [],
      gxl = parseFloat($("#y1")[0].value),
      gxr = parseFloat($("#y2")[0].value),
      dx = gxr - gxl,
      gyb = parseFloat($("#x1")[0].value),
      gyt = parseFloat($("#x2")[0].value),
      dy = gyt - gyb,
      currentLine, line,
      firstChar, 
      geoViewPort = {gxr:gxr, gyt:gyt, dx:dx, dy:dy};
  $('#ratio').val(dx / dy);
  lastsx = 0;
  lastsy = 0;
  currentColor = "red";
  currentWidth = 1;
  firstChar = scriptLines[0].charAt(0);
  if (firstChar === "<") {
    coordinates = processScriptAsXML(myScript,geoViewPort);
  } else {
    for (line in scriptLines) {
      currentLine = scriptLines[line].trim();
      processScriptLine(currentLine,coordinates,geoViewPort);
    }
  }
  return coordinates;
}

function processScript() {
  'use strict';
  var start, coordinates, end, time, messagesSpan;
  start = new Date().getMilliseconds();
  coordinates = processScriptToCoordinates();
  if ($("#gvWms").css("display") === "block") {
    drawSVGLines( coordinates );
  } else {
    drawLeaflet( coordinates );
  }
  end = new Date().getMilliseconds();
  time = end - start;
  messagesSpan = $('#messages')[0];
  messagesSpan.innerHTML = "elapsed time (ms): "+time;
}

function drawLeaflet( coordinates ) {
  'use strict';
  var poly = [
[50.00723390959761,14.705631132669444], 
[50.00697604375973,14.706367159424964], 
[50.0061292638612,14.707554726986269], 
[50.005168239686654,14.70946729471725], 
[50.00524889018167,14.711523631889222], 
[50.00444763139311,14.711336253063992], 
[50.00305888691087,14.711413852594736], 
[50.00284868205079,14.710762893084791], 
[50.00245569731188,14.710676354067065], 
[50.002094306010726,14.710060562535094], 
[50.00152117262778,14.710355214152372], 
[50.0003122885268,14.709487244215635], 
[50.00003300208446,14.709744307928094], 
[49.99955589910658,14.70944063026835], 
[49.99906366541651,14.709908761449281], 
[49.99814161116781,14.711495716863984], 
[49.99648021812239,14.708097997486679], 
[49.99544209289548,14.708345270701932], 
[49.99497996047476,14.70900469871693], 
[49.99499835848378,14.706993398918902], 
[49.99609051645041,14.706520570074186], 
[49.996897166374495,14.705501277424547], 
[49.99733762516917,14.705234544851967], 
[49.99740098403098,14.703606427170893], 
[49.99480504989364,14.704184238946175], 
[49.99425556638808,14.7044794996491], 
[49.99407124504491,14.702605126288493], 
[49.994150393722975,14.701149023181616], 
[49.99467735176156,14.699661020329202], 
[49.99468524910494,14.698375175309677], 
[49.9952723535167,14.69704419807751], 
[49.99474904737685,14.69643378341381], 
[49.9944069339385,14.695311949339613], 
[49.99392481362341,14.695637086633582], 
[49.993827814717484,14.695426594621354], 
[49.99364111105714,14.695528410793841], 
[49.99349622011339,14.695074153906269], 
[49.99324007997969,14.695269052046035], 
[49.99322366741315,14.695604409895987], 
[49.99277064235066,14.695449989040172], 
[49.992326926022166,14.696079240786869], 
[49.99160049618461,14.69520289776838], 
[49.99100590506196,14.695608079831095], 
[49.98974819128307,14.698896676280555], 
[49.98947541982307,14.69937302164741], 
[49.98912956863915,14.699426099420396], 
[49.98885328931467,14.700228748227037], 
[49.98874666284195,14.700157875581485], 
[49.98824822638421,14.701136204436548], 
[49.98842913370806,14.701383578045807], 
[49.98823635388237,14.70149070002046], 
[49.987947197456585,14.70266687376874], 
[49.98787066880936,14.702541070176473], 
[49.98743367711286,14.702862632331247], 
[49.98718829653282,14.702684915936072], 
[49.98704607716162,14.702953328628498], 
[49.986766421717114,14.702597007153436], 
[49.98665422104436,14.702974699742517], 
[49.98632554036157,14.703073287824614], 
[49.98624219178405,14.703349036164488], 
[49.985879912527544,14.703200078672843], 
[49.98557690367561,14.703546863823087], 
[49.985481025551636,14.703362894129787], 
[49.98543271721651,14.703522190627336], 
[49.98511480377076,14.703477425997576], 
[49.984874845432444,14.703203765275815], 
[49.98478167270813,14.703407681319232], 
[49.984578897096135,14.703324257480705], 
[49.984509912317705,14.703105026807627], 
[49.98361689592818,14.703417064650896], 
[49.98334088311412,14.70314188918607], 
[49.982890695256806,14.703238948489432], 
[49.98264269446594,14.703482011635135], 
[49.98276520839738,14.703792828055606], 
[49.98266516076857,14.704042193902495], 
[49.98234784383529,14.70430933786279], 
[49.98135994465082,14.704151316189144], 
[49.98098983902003,14.702976757533696], 
[49.980735694235015,14.702819452055202], 
[49.9805076999338,14.701587855964434], 
[49.97959000737218,14.700247162168418], 
[49.979161390392726,14.698830331973804], 
[49.97884332188823,14.698275131855587], 
[49.98093191382764,14.69809187934811], 
[49.98074503790112,14.696054101316523], 
[49.980914024176336,14.691993301089047], 
[49.98072209687306,14.689609514070778], 
[49.98080657162257,14.686855563556996], 
[49.98093504161936,14.686324519638355], 
[49.980432541657564,14.6824764966667], 
[49.98014297435414,14.681998027603974], 
[49.979650694789456,14.682984969163359], 
[49.97793367140563,14.682875700166932], 
[49.97605209426353,14.683709930611728], 
[49.97562103962766,14.681956914894107], 
[49.9749636021596,14.68034538209904], 
[49.974944996281195,14.679442090291225], 
[49.975171784933345,14.679057048583234], 
[49.97464815731013,14.678126691400049], 
[49.97379080521605,14.677340453299283], 
[49.973663032444435,14.676969792447085], 
[49.97374349723145,14.676417126697658], 
[49.973155612809705,14.675531836504199], 
[49.97320821797431,14.675220297355859], 
[49.97398600524736,14.673433392455859], 
[49.97493770839907,14.671918296963575], 
[49.97536006774736,14.670750339215484], 
[49.973511233204896,14.668500870348076], 
[49.973159068190014,14.667772810796412], 
[49.972959357218286,14.666519430264415], 
[49.97347587808567,14.666422579675269], 
[49.9736161809541,14.664229774110815], 
[49.97363903099992,14.664612974967973], 
[49.97550522841244,14.664957379155254], 
[49.9743137532972,14.663768136628756], 
[49.97293377291989,14.661952021234855], 
[49.97248801755234,14.661643695381386], 
[49.97172295664476,14.660470985083014], 
[49.973195341038746,14.65763913018033], 
[49.97326640957348,14.656807463026649], 
[49.971984095428006,14.655761458087648], 
[49.971316768719895,14.6557157121108], 
[49.97071650179447,14.656078253957865], 
[49.970350985265135,14.654872881107268], 
[49.97026886640269,14.652031366036994], 
[49.97088564321764,14.651871824288394], 
[49.97076521947025,14.649823574434658], 
[49.97057739578343,14.649812808663606], 
[49.97007890132359,14.646657516233548], 
[49.97069614143484,14.64613011534086], 
[49.969987478634565,14.643412262309786], 
[49.970422712317664,14.643079217644917], 
[49.97005399018291,14.641524060749049], 
[49.96999540544405,14.640355146902833], 
[49.96959741415227,14.639548820593264], 
[49.96862412731994,14.640156950227903], 
[49.9681074250174,14.638609550271408], 
[49.96772042322628,14.63889612310604], 
[49.96758000969645,14.63835015327263], 
[49.9670396805444,14.638604314509392], 
[49.96600468288614,14.639670755785684], 
[49.965625840978234,14.638317312167196], 
[49.96567699818552,14.63889061259928], 
[49.96425825887206,14.639488312297075], 
[49.96264059867028,14.638882115139689], 
[49.961089266890525,14.638721010732224], 
[49.96057043369345,14.636677582026318], 
[49.960193740664444,14.636847778993685], 
[49.96009440693028,14.636333120970436], 
[49.95815133811128,14.637734431708129], 
[49.95636592923662,14.63853615085445], 
[49.95506223948124,14.638468651268715], 
[49.954724168549326,14.6372299105975], 
[49.95433921122742,14.636593958466923], 
[49.95339701100962,14.636207508168768], 
[49.952752133593755,14.636099991154847], 
[49.952354133384745,14.636942661098974], 
[49.95220592378855,14.636407494990829], 
[49.952622783907195,14.6356941863676], 
[49.9529801258585,14.631984417261632], 
[49.95418402956764,14.630870571054404], 
[49.95471925064149,14.629904648807965], 
[49.9555444474235,14.629890469124598], 
[49.955341697183826,14.630631575422203], 
[49.95642535751713,14.630474262201286], 
[49.95657865301569,14.62899435390605], 
[49.95607675760657,14.627761302660106], 
[49.95597291166265,14.625830983545677], 
[49.95548415647267,14.625114411573124], 
[49.955163056575685,14.623803411358649], 
[49.95471291613201,14.623399416305585], 
[49.95469745482761,14.62313518457778], 
[49.955765231771636,14.621621314302496], 
[49.956963247930894,14.62097960560241], 
[49.957656084323986,14.620191910949869], 
[49.9588402507739,14.619298345841239], 
[49.95865469068367,14.618542424794562], 
[49.95805880089875,14.618220542395985], 
[49.95739453307545,14.616967362494615], 
[49.95810865419375,14.615112513244306], 
[49.95841867787201,14.615111498341582], 
[49.95956143759943,14.61545774138656], 
[49.96162008644389,14.61474614903946], 
[49.96215443537453,14.616670329864455], 
[49.961870796644945,14.617103642274186], 
[49.96233973999557,14.618032960332576], 
[49.963260474418334,14.617596476439715], 
[49.963372728399094,14.617868778786907], 
[49.963788346490716,14.617657080741123], 
[49.964012731961205,14.618839287505965], 
[49.96527227288378,14.618289455017335], 
[49.96613079085655,14.618184693627077], 
[49.966113297405165,14.61738956256691], 
[49.967917262767365,14.617097811488275], 
[49.96764402519355,14.616255024825445], 
[49.966817726115536,14.616165021447946], 
[49.9674413297889,14.615598349614926], 
[49.96756705247472,14.615916944501171], 
[49.96819135093271,14.61546559980285], 
[49.96880996133559,14.61699276404552], 
[49.96939403869758,14.616028245705998], 
[49.970377043773595,14.617136825200605], 
[49.9706683488603,14.616543437679159], 
[49.972101316778286,14.617297101350143], 
[49.97221329030054,14.6162809298522], 
[49.97254924396131,14.616437117468806], 
[49.97247215668451,14.617690489995606], 
[49.9727945832457,14.617716297564902], 
[49.97284984045909,14.620371956554813], 
[49.97361094480638,14.620266491064376], 
[49.97391463714095,14.62014373908743], 
[49.973564639429476,14.617879441772716], 
[49.97451037466488,14.61749037759481], 
[49.974271967467786,14.616963189200092], 
[49.97473712130892,14.61626879895875], 
[49.97508756247022,14.61655392387978], 
[49.975471570869445,14.614314475980459], 
[49.975797676592485,14.61435229509736], 
[49.97592287632469,14.61314122772353], 
[49.97650317944163,14.612899458171853], 
[49.97633521919117,14.611260150114092], 
[49.977514066540216,14.61132058838215], 
[49.977547626721154,14.610472364385943], 
[49.97744258916663,14.61029556190025], 
[49.978179857558686,14.610657096621942], 
[49.97813436539264,14.611511065597766], 
[49.97878624790583,14.611455752501657], 
[49.97889717208743,14.612888162485278], 
[49.97946697271146,14.612789411464664], 
[49.97978590184206,14.614237251406417], 
[49.98122285610082,14.613763941691655], 
[49.98121104513763,14.613420850408842], 
[49.98185864174061,14.613278798498634], 
[49.98262164202299,14.613982003516282], 
[49.98363466425747,14.613649898624496], 
[49.98457640942401,14.61376328086809], 
[49.9856408763997,14.612686980298966], 
[49.98757857403265,14.611237221040382], 
[49.98842914748906,14.612604507334563], 
[49.98951667075968,14.611037475856259], 
[49.989882969250154,14.611638079795952], 
[49.990297705327535,14.613054766088181], 
[49.99052394669424,14.615249905267595], 
[49.99165208912059,14.616034302208188], 
[49.99174025546624,14.61542406676534], 
[49.99213567860203,14.615700713461706], 
[49.99278154241119,14.61539900740254], 
[49.99270093711117,14.614735429521524], 
[49.99316344881873,14.61422116459701], 
[49.99312214319947,14.613910201049805], 
[49.99385983517425,14.613089470995082], 
[49.994821809094766,14.614792808341637], 
[49.99577883572907,14.614232111903979], 
[49.99719513132032,14.612756056129298], 
[49.99799301412758,14.612839623341749], 
[49.99889013282836,14.61223382916881], 
[49.99975415490101,14.61135202420994], 
[50.000065041905266,14.613012301036026], 
[49.999857197116185,14.613857017668495], 
[49.99862584548654,14.615533954275786], 
[49.998252199106695,14.616829966675178], 
[49.99851996240524,14.61698461309748], 
[49.99752546718801,14.619195659263434], 
[49.99861587506191,14.619492428732677], 
[49.99839354922134,14.621325082119572], 
[49.9987012137712,14.621410739244329], 
[49.99861637299863,14.622348719919462], 
[49.9961830490553,14.628185373979196], 
[49.99554310740633,14.62920388005524], 
[49.99613093869499,14.633997047594859], 
[49.99541881004104,14.636623417570092], 
[49.99522494469238,14.63870741643951], 
[49.99444182116008,14.640153080291622], 
[49.99875529875576,14.646924168990251], 
[50.00128321923555,14.643208035681688], 
[50.005295032351846,14.639219072235882], 
[50.00578346452894,14.638290445553801], 
[50.006357625053184,14.6396564347707], 
[50.006066001426106,14.642417556382306], 
[50.00612820322017,14.64294215487346], 
[50.00648163976172,14.64269716824362], 
[50.00653963033107,14.643815425113987], 
[50.005546044416334,14.645106373357239], 
[50.00515680980497,14.645358106865437], 
[50.00478455815527,14.645201035367924], 
[50.004734938824264,14.645497142805631], 
[50.00530414663176,14.645804816187463], 
[50.00590312441038,14.646811516416976], 
[50.00879458418801,14.649805751652343], 
[50.00435019722209,14.657786675519693], 
[50.00660808702388,14.660522026288039], 
[50.00730179777097,14.661812511898079], 
[50.00840373310297,14.66261675646397], 
[50.00857177536202,14.661963190322142], 
[50.009301488531314,14.661620051822668], 
[50.0105102533586,14.662865065215529], 
[50.01086753005661,14.662670371327184], 
[50.011212684587285,14.662879556042688], 
[50.01164185226333,14.662784889502198], 
[50.01205402618608,14.662200472893801], 
[50.01239994579486,14.661278328936302], 
[50.01278427321582,14.661585775083122], 
[50.0129480881877,14.662538082964401], 
[50.01317377249161,14.66270544894577], 
[50.013161623492486,14.663038820190359], 
[50.01358975956537,14.66319425725392], 
[50.013608213255885,14.664196731312215], 
[50.01341151769153,14.665304578675432], 
[50.01282034617966,14.666011736467695], 
[50.01321317989003,14.666724869912748], 
[50.01320371723259,14.667078936267538], 
[50.01357285521385,14.667277110087728], 
[50.013435368522224,14.66854956530348], 
[50.01638144553049,14.668964517968778], 
[50.016328497763396,14.670063010719021], 
[50.01649288504465,14.670117605187716], 
[50.01638886278198,14.672496093857156], 
[50.016087416823865,14.672519311793604], 
[50.01607345315064,14.672856170029025], 
[50.016441365913316,14.67790454513611], 
[50.0162443809553,14.678220082874562], 
[50.01700035145052,14.682181802563727], 
[50.01541526761872,14.682109506476241], 
[50.015407207813396,14.68228293992978], 
[50.0150165210634,14.682275951545106], 
[50.01495598137328,14.685580882025441], 
[50.01329858387662,14.685317138057462], 
[50.01331541854436,14.684442788468749], 
[50.01261973103403,14.686069005270271], 
[50.01176236713282,14.68645029339899], 
[50.01113411962736,14.685865820144716], 
[50.010835663670576,14.68594041458316], 
[50.01028865730217,14.684633954169348], 
[50.00953377457713,14.684790107865483], 
[50.00961051549109,14.685072572686362], 
[50.00793588914282,14.685186039285464], 
[50.00660498819853,14.68475338512232], 
[50.00666686835128,14.684053054120534], 
[50.00554325541219,14.686501224996572], 
[50.00475744716876,14.688464258868217], 
[50.00554588149794,14.686724900439078], 
[50.006608702111045,14.687655452882545], 
[50.0078990160656,14.689491559390394], 
[50.00755602891318,14.69341162356638], 
[50.00791017352726,14.693350565174326], 
[50.00781543195824,14.6934079745839], 
[50.00821230865512,14.695457882326243], 
[50.00864041447232,14.695445519406592], 
[50.00879687723496,14.696964626202375], 
[50.008618324174606,14.700404448648209], 
[50.00804957256175,14.70021752065099], 
[50.00803049378776,14.70222432418524], 
[50.007283978372215,14.701834715856466], 
[50.006558090729094,14.701746412308525], 
[50.00649993542565,14.702587943249874], 
[50.00730976275477,14.702667138952338], 
[50.00812789588792,14.70310044830812], 
[50.00723390959761,14.705631132669444]
    ];
  L.polygon(poly).addTo(map);
}

function drawSVGLines( coordinates ) {
  'use strict';
  var svg = $('#svgbasics').svg('get'),
      lc, lineCoords;
  for (lineCoords in coordinates) {
    lc = coordinates[lineCoords];
    if (lc.type === 'line') {
      svg.line(lc.x1, lc.y1, lc.x2, lc.y2, {stroke: lc.color, 'stroke-width': lc.strokeWidth});
    } else if (lc.type === 'rect') {
      svg.rect(lc.x1, lc.y1, lc.width, lc.height, {fill: 'none',stroke: lc.color, 'stroke-width': lc.strokeWidth});
    } else if (lc.type === 'point') {
      svg.line(lc.x1-15, lc.y1, lc.x1+15, lc.y1, {stroke: lc.color, 'stroke-width': lc.strokeWidth});
      svg.line(lc.x1, lc.y1-15, lc.x1, lc.y1+15, {stroke: lc.color, 'stroke-width': lc.strokeWidth});
    } else {
      svg.text(null, lc.x1, lc.y1, lc.text, {stroke: lc.color, 'stroke-width': lc.strokeWidth});
    }
  }
}
